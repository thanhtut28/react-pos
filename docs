local -> 'http://localhost:5000/api'
digitalocean -> 'https://umt-api-mgoum.ondigitalocean.app/api'

Method: POST
Endpoint: '/login'
description: user login
Request body: {
    "username": String,
    "password": String
}

**User Routes**
Method: POST
Endpoint: '/user'
Authorization: admin
description: create user
Request body: {
    "username": String,
    "password": String
}

Method: GET
Endpoint: '/users'
Authorization: admin
description: get all users
Request body: {}

Method: PUT
Endpoint: '/user'
Authorization: admin
description: update user
Request body: {
    "userId": String,
    "username": String,
    "password": String
}

Method: DELETE
Endpoint: '/user'
Authorization: admin
description: delete user
Request body: {
    "userId": String
}
**End of User Routes**

**Item Routes**
Method: POST
Endpoint: '/item'
Authorization: admin
description: create item
Request body: {
    "itemCode": String,
    "itemName": String,
    "lowestQty": Number,
    "unitPrice": Number,
    "unitPercent": Number,
}

Method: GET
Endpoint: '/items'
Authorization: admin
description: get all items
Request body: {}

Method: PUT
Endpoint: '/item'
Authorization: admin
description: update item
Request body: {
    "itemId": String,
    "itemCode": String,
    "itemName": String,
    "lowestQty": Number,
    "unitPrice": Number,
    "unitPercent": Number,
}

Method: DELETE
Endpoint: '/item'
Authorization: admin
description: delete item
Request body: {
    "itemId": String
}
**End of Item routes**

**Customer Routes**
Method: POST
Endpoint: '/customer'
Authorization: admin, seller
description: create customer
Request body: {
    "customerCode": String,
    "customerName": String,
}

Method: GET
Endpoint: '/customers'
Authorization: admin, seller
description: get all customers
Request body: {}

Method: PUT
Endpoint: '/customer'
Authorization: admin, seller
description: update customer
Request body: {
    "customerId": String,
    "customerCode": String,
    "customerName": String,
}

Method: DELETE
Endpoint: '/customer'
Authorization: admin, seller
description: delete customer
Request body: {
    "customerId": String
}
**End of Customer routes**

**Supplier Routes**
Method: POST
Endpoint: '/supplier'
Authorization: admin
description: create supplier
Request body: {
    "supplierCode": String,
    "supplierName": String
}

Method: GET
Endpoint: '/suppliers'
Authorization: admin
description: get all suppliers
Request body: {}

Method: PUT
Endpoint: '/supplier'
Authorization: admin
description: update supplier
Request body: {
    "supplierId": String,
    "supplierCode": String,
    "supplierName": String,
}

Method: DELETE
Endpoint: '/supplier'
Authorization: admin
description: delete category
Request body: {
    "supplierId": String
}
**End of Category routes**

**Supply Routes**
Method: POST
Endpoint: '/supply'
Authorization: admin
description: create supply
Request body: {
    "supplyType": Enum ['cash','return','cancel'],
    "supplierName": String,
    "items": [
        "itemId": String,
        "qty": Number,
        "unitPrice": Number,
        "unitPercent": Number,
    ]
}

Method: PUT
Endpoint: '/supply'
Authorization: admin
description: update supply
Request body: {
    "supplyId": String,
    "supplyType": Enum ['cash','return','cancel'],
    "supplierName": String,
    "items": [
        "itemId": String,
        "qty": Number,
        "unitPrice": Number,
        "unitPercent": Number,
    ]
}

Method: GET
Endpoint: '/supplies'
Authorization: admin
description: get all supplies
Request body: {
    "fromDate": DateString,
    "toDate": DateString,
}
**End of Supply routes**

**Transfer Routes**
Method: POST
Endpoint: '/transfer'
Authorization: admin
description: create transfer
Request body: {
    "transferType": Enum ['give', 'take', 'cancel'],
    "userId": String,
    "username": String,
    "items": [
        "itemId": String,
        "qty": Number
    ]
}

Method: PUT
Endpoint: '/transfer'
Authorization: admin
description: update transfer
Request body: {
    "transferId": String,
    "transferType": Enum ['give', 'take', 'cancel'],
    "userId": String,
    "username": String,
    "items": [
        "itemId": String,
        "qty": Number
    ]
}

Method: GET
Endpoint: '/transfers'
Authorization: admin
description: get all transfers
Request body: {
    "fromDate": DateString,
    "toDate": DateString,
}
**End of Transfer routes**

**Receipt Routes**
Method: POST
Endpoint: '/receipt'
Authorization: admin, seller
description: create receipt
Request body: {
    "receiptType": Enum ['cash','credit', 'return','cancel'],
    "customerName": String,
    "items": [
        "itemId": String,
        "qty": Number,
        "unitPrice": Number,
        "unitPercent": Number,
    ]
}

Method: PUT
Endpoint: '/receipt'
Authorization: admin, seller
description: update receipt
Request body: {
    "receiptId": String,
    "receiptType": Enum ['cash','credit', 'return','cancel'],
    "customerName": String,
    "items": [
        "itemId": String,
        "qty": Number,
        "unitPrice": Number,
        "unitPercent": Number,
    ]
}

Method: GET
Endpoint: '/receipts'
Authorization: admin, seller
description: get all supplies
Request body: {
    "fromDate": DateString,
    "toDate": DateString,
}
**End of Supply routes**